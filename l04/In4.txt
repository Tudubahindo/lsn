from scipy.optimize import curve_fit

def expo(x, tau):
    return np.exp(-x/tau)

lasts = dict()
for phase in phases:
    lasts[phase] = calibration[phase][selected[phase]].iloc[-2*blocksize:]
    
print(lasts['gas'])

autoc = dict()
for phase in phases:
    autoc[phase] = list()
    for lag in range(2*blocksize-1):
        autoc[phase].append(lasts[phase]['ACTUAL_T:'].autocorr(lag))
        
lag = np.arange(2*blocksize-1)
tau = dict()
for phase in phases:
    fit, cov = curve_fit(expo, lag, autoc[phase])
    tau[phase]=fit[0]
    print(phase+' tau:', tau[phase])

ax = dict()
fig, (ax["solid"], ax["liquid"], ax["gas"]) = plt.subplots(3, 1, figsize=(17,30))
for phase in phases:
    ax[phase].plot(autoc[phase], label=phase+' phase autocorrelation')
    ax[phase].plot(lag, expo(lag, tau[phase]), label=r'exponential fit, $\tau$=' + f'{tau[phase]:.2f}')
    ax[phase].set_title(phase)
    ax[phase].set_xlabel('lag')
    ax[phase].set_ylabel('autocorrelation')
    ax[phase].grid(True)
    #ax[phase].legend(loc='upper center', ncol=3, fancybox=False)
    ax[phase].legend(loc='upper right', prop={'size':20})
    
plt.show()
